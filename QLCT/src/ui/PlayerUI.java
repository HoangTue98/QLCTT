/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;

import Sev.Serviceipm.playServiceImp;

import entity.player;
import java.awt.Color;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class PlayerUI extends javax.swing.JFrame {

    playServiceImp pServiceImp;
    int index;
    DefaultTableModel model = new DefaultTableModel();
    Random rd = new Random();
    String FindName = null;

    public PlayerUI() {
        initComponents();
        setLocationRelativeTo(null);
        pServiceImp = new playServiceImp();
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        LoadData();
        setResizable(false);
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtHovaten = new javax.swing.JTextField();
        txtSdt = new javax.swing.JTextField();
        txtSoao = new javax.swing.JTextField();
        txtQuoctich = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCauthu = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtTienluong = new javax.swing.JTextField();
        rdoNam = new javax.swing.JRadioButton();
        rdoNu = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();
        txtDate = new com.toedter.calendar.JDateChooser();
        txtID = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btxXoa = new javax.swing.JButton();
        btnnew = new javax.swing.JButton();
        btn1 = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtPass = new javax.swing.JPasswordField();
        rdoCC = new javax.swing.JRadioButton();
        rdoHLV = new javax.swing.JRadioButton();
        jLabel13 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel1.setText("QUẢN LÝ CẦU THỦ");

        jLabel2.setText("Họ và Tên:");

        jLabel3.setText("Năm sinh:");

        jLabel4.setText("Số áo:");

        jLabel5.setText("Quốc tịch:");

        jLabel6.setText("Phone:");

        txtHovaten.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHovatenActionPerformed(evt);
            }
        });

        txtSdt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSdtActionPerformed(evt);
            }
        });

        txtSoao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSoaoActionPerformed(evt);
            }
        });

        txtQuoctich.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuoctichActionPerformed(evt);
            }
        });

        tblCauthu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "id", "Họ và Tên", "Năm sinh", "Giới tính", "Số áo", "Quốc tịch", "SDT", "Email", "Tiền lươnng", "Vai trò"
            }
        ));
        tblCauthu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCauthuMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblCauthu);

        jLabel8.setText("DANH SÁCH CẦU THỦ");

        jLabel9.setText("Tiền lương");

        txtTienluong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTienluongActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdoNam);
        rdoNam.setSelected(true);
        rdoNam.setText("Nam");
        rdoNam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoNamActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdoNu);
        rdoNu.setText("Nữ");

        jLabel10.setText("Giới tính:");

        txtID.setEditable(false);
        txtID.setText(" ");

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        btnThem.setBackground(new java.awt.Color(255, 204, 51));
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/folder.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setBackground(new java.awt.Color(255, 204, 51));
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/loop.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btxXoa.setBackground(new java.awt.Color(255, 204, 51));
        btxXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/delete.png"))); // NOI18N
        btxXoa.setText("Xoá");
        btxXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btxXoaActionPerformed(evt);
            }
        });

        btnnew.setBackground(new java.awt.Color(255, 204, 51));
        btnnew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/new.png"))); // NOI18N
        btnnew.setText("Làm mới");
        btnnew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnnewActionPerformed(evt);
            }
        });

        btn1.setBackground(new java.awt.Color(255, 204, 51));
        btn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/left-button.png"))); // NOI18N
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });

        btn2.setBackground(new java.awt.Color(255, 204, 51));
        btn2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/right-align.png"))); // NOI18N
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnThem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSua, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btxXoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnnew, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnThem)
                            .addComponent(btn1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSua)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btxXoa))
                    .addComponent(btn2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnnew)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel11.setText("Email:");

        jLabel12.setText("Passwourd:");

        buttonGroup2.add(rdoCC);
        rdoCC.setText("Cầu thủ");

        buttonGroup2.add(rdoHLV);
        rdoHLV.setText("HLV");
        rdoHLV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoHLVActionPerformed(evt);
            }
        });

        jLabel13.setText("Vai trò");

        jButton1.setBackground(new java.awt.Color(255, 204, 51));
        jButton1.setText("Đăng xuất");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGap(263, 263, 263)
                .addComponent(jLabel1)
                .addContainerGap(369, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtHovaten, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel5)
                                .addComponent(jLabel11)
                                .addComponent(jLabel13))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(rdoCC)
                                    .addGap(58, 58, 58)
                                    .addComponent(rdoHLV))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtQuoctich, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                                    .addComponent(txtEmail)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(181, 181, 181)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtPass))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel10))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(31, 31, 31)
                                        .addComponent(rdoNam)
                                        .addGap(18, 18, 18)
                                        .addComponent(rdoNu))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(26, 26, 26)
                                        .addComponent(txtSoao, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel6))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtSdt, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTienluong, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(59, 59, 59))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(10, 10, 10)
                        .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(txtHovaten, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(rdoNam)
                                    .addComponent(rdoNu)
                                    .addComponent(jLabel10))
                                .addGap(22, 22, 22)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(txtSoao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(txtSdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtQuoctich, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtTienluong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rdoCC)
                        .addComponent(rdoHLV)
                        .addComponent(jLabel13))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12)
                        .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtSdtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSdtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSdtActionPerformed

    private void txtSoaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSoaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSoaoActionPerformed
    player getModel() {
        player entiry = new player();
        entiry.setIdPlayer(txtID.getText());
        entiry.setPlayername(txtHovaten.getText());
        entiry.setYear(txtDate.getDate());
        entiry.setSex(rdoNam.isSelected());
        entiry.setClothersnumber(txtSoao.getText());
        entiry.setNationality(txtQuoctich.getText());
        entiry.setPhone(txtSdt.getText());
        entiry.setSalaly(txtTienluong.getText());
        entiry.setEmail(txtEmail.getText());
        entiry.setPassword(txtPass.getText());
        entiry.setRole(rdoCC.isSelected());
        return entiry;
    }
    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        player mod = getModel();
        String CheckName = "^[A-Za-zÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚÝàáâãèéêìíòóôõùúýĂăĐđĨĩŨũƠơƯưẠ-ỹ ]{3,25}$";
        String Checksdt = "(086|096|097|098|032|033|034|035|036|037|038|039|089|090|093|070|079|077|078|076|088|091|094|083|084|085|081|082|092|056|058|099|059)[0-9]{7}";
        String email = "^[a-zA-Z][a-zA-Z0-9_\\.]{2,32}@[a-zA-Z0-9]{2,10}(\\.[a-zA-Z0-9]{2,4}){1,2}$";
        try {
            if (txtHovaten.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Thông tin không được để trống");
                txtHovaten.setBackground(Color.pink);
                txtHovaten.requestFocus();
                return;
            }
            if (!txtHovaten.getText().matches(CheckName)) {
                JOptionPane.showMessageDialog(this, "Tên phải có dấu hoặc viết thường");
                txtHovaten.setBackground(Color.pink);
                txtHovaten.requestFocus();
                return;
            }
            txtHovaten.setBackground(Color.white);
            if (txtDate.getDate() == null) {
                JOptionPane.showMessageDialog(this, "Xin chọn ngày sinh");
                return;
            }
            Date d = txtDate.getDate();
            System.out.println(d);
            if (d.getTime() > new Date().getTime()) {
                JOptionPane.showMessageDialog(this, "Ngày sinh phải nhỏ hơn năn hiện tại!");
                txtDate.setDate(null);
                return;
            }
            long ngaysinhh = txtDate.getDate().getTime();
            if (!txtQuoctich.getText().matches(CheckName)) {
                JOptionPane.showMessageDialog(this, "Tên phải có dấu hoặc viết thường");
                txtQuoctich.setBackground(Color.pink);
                txtQuoctich.requestFocus();
                return;
            }
            txtQuoctich.setBackground(Color.white);

            if (!txtSdt.getText().matches(Checksdt)) {
                JOptionPane.showMessageDialog(this, "Số điện thoại phải đủ 10 số \n Đúng các đầu dố của các nhà mạng");
                txtSdt.setBackground(Color.pink);
                txtSdt.requestFocus();
                return;
            }
            int checkTienluong;
            try {
                checkTienluong = Integer.parseInt(txtTienluong.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Không đúng định dạng số");
                txtTienluong.setBackground(Color.pink);
                txtTienluong.requestFocus();
                return;
            }
            txtSdt.setBackground(Color.white);
            if (txtTienluong.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Thông tin không được để trống");
                txtTienluong.setBackground(Color.pink);
                txtTienluong.requestFocus();
                return;
            }
            int checkSoao;
            try {
                checkSoao = Integer.parseInt(txtSoao.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Không đúng định dạng số");
                txtSoao.setBackground(Color.pink);
                txtSoao.requestFocus();
                return;
            }
            if (txtSoao.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Thông tin không được để trống");
                txtSoao.setBackground(Color.pink);
                txtSoao.requestFocus();
                return;
            }
            for (int i = 0; i < model.getRowCount(); i++) {
                if (model.getValueAt(index, 6).equals(mod.getPhone())) {
                    JOptionPane.showMessageDialog(this, "Số điện thoại đã tồn tại");
                    txtSdt.requestFocus();
                    return;
                }
            }
            if (txtEmail.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Email không được để trống");
                txtEmail.setBackground(Color.pink);
                txtEmail.requestFocus();
                return;
            }
            if (!txtEmail.getText().matches(email)) {
                JOptionPane.showMessageDialog(this, "Email không đúng định dạng!");
                txtEmail.setBackground(Color.pink);
                txtEmail.requestFocus();
                return;
            }
            for (int i = 0; i < model.getRowCount(); i++) {
                if (model.getValueAt(index, 5).equals(mod.getClothersnumber())) {
                    JOptionPane.showMessageDialog(this, "Số áo đã tồn tại");
                    txtSoao.requestFocus();
                    return;
                }
                if (model.getValueAt(index, 7).equals(mod.getPhone())) {
                    JOptionPane.showMessageDialog(this, "Số điện thoại đã tồn tại");
                    txtSdt.requestFocus();
                    return;
                }
                if (model.getValueAt(index, 8).equals(mod.getEmail())) {
                    JOptionPane.showMessageDialog(this, "Email đã tồn tại");
                    txtEmail.requestFocus();
                    return;
                }

            }
//                 UUID uuid = UUID.randomUUID();
//            
//            mod.setIdPlayer(uuid.toString());

            pServiceImp.create(mod);
            System.out.println(mod);
            LoadData();
            JOptionPane.showMessageDialog(this, "Thêm thành công thành công");
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("Lỗi");
            JOptionPane.showMessageDialog(this, "Thêm thất bại!");
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void txtTienluongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTienluongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTienluongActionPerformed

    private void txtHovatenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHovatenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHovatenActionPerformed

    private void rdoNamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoNamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdoNamActionPerformed

    private void btnnewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnnewActionPerformed
        txtID.setText("");
        txtHovaten.setText("");
        txtDate.setDate(null);
        txtQuoctich.setText("");
        txtSdt.setText("");
        txtSoao.setText("");
        txtTienluong.setText("");
        rdoCC.setSelected(true);
        txtHovaten.requestFocus();
        rdoNam.setSelected(true);
    }//GEN-LAST:event_btnnewActionPerformed

    private void tblCauthuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCauthuMouseClicked
        Showdetails();
    }//GEN-LAST:event_tblCauthuMouseClicked

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        player mod = getModel();
        String CheckName = "^[A-Za-zÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚÝàáâãèéêìíòóôõùúýĂăĐđĨĩŨũƠơƯưẠ-ỹ ]{3,25}$";
        String Checksdt = "(086|096|097|098|032|033|034|035|036|037|038|039|089|090|093|070|079|077|078|076|088|091|094|083|084|085|081|082|092|056|058|099|059)[0-9]{7}";
        try {
            if (txtHovaten.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Thông tin không được để trống");
                txtHovaten.setBackground(Color.pink);
                txtHovaten.requestFocus();
                return;
            }
            if (!txtHovaten.getText().matches(CheckName)) {
                JOptionPane.showMessageDialog(this, "Tên phải có dấu hoặc viết thường");
                txtHovaten.setBackground(Color.pink);
                txtHovaten.requestFocus();
                return;
            }
            txtHovaten.setBackground(Color.white);
            if (txtDate.getDate() == null) {
                JOptionPane.showMessageDialog(this, "Xin chọn ngày sinh");
                return;
            }
            Date d = txtDate.getDate();
            System.out.println(d);
            if (d.getTime() > new Date().getTime()) {
                JOptionPane.showMessageDialog(this, "Ngày sinh phải nhỏ hơn năn hiện tại!");
                txtDate.setDate(null);
                return;
            }
            long ngaysinhh = txtDate.getDate().getTime();
            if (!txtQuoctich.getText().matches(CheckName)) {
                JOptionPane.showMessageDialog(this, "Tên phải có dấu hoặc viết thường");
                txtQuoctich.setBackground(Color.pink);
                txtQuoctich.requestFocus();
                return;
            }
            txtQuoctich.setBackground(Color.white);
            if (!txtSdt.getText().matches(Checksdt)) {
                JOptionPane.showMessageDialog(this, "Số điện thoại phải đủ 10 số \n Đúng các đầu dố của các nhà mạng");
                txtSdt.setBackground(Color.pink);
                txtSdt.requestFocus();
                return;
            }
            int checkTienluong;
            try {
                checkTienluong = Integer.parseInt(txtTienluong.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Không đúng định dạng số");
                txtTienluong.setBackground(Color.pink);
                txtTienluong.requestFocus();
                return;
            }
            txtSdt.setBackground(Color.white);
            if (txtTienluong.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Thông tin không được để trống");
                txtTienluong.setBackground(Color.pink);
                txtTienluong.requestFocus();
                return;
            }

            int checkSoao;

            try {
                checkSoao = Integer.parseInt(txtSoao.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Không đúng định dạng số");
                txtSoao.setBackground(Color.pink);
                txtSoao.requestFocus();
                return;
            }
            if (txtSoao.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Thông tin không được để trống");
                txtSoao.setBackground(Color.pink);
                txtSoao.requestFocus();
                return;
            }
//
//                 int gioitinh = rdoNam.isSelected() ? 0 : 1;
            pServiceImp.update(mod);
            System.out.println(mod);
            JOptionPane.showMessageDialog(this, "Cập nhật thành công");
            LoadData();
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("Lỗi");
            JOptionPane.showMessageDialog(this, "Thêm thất bại!");
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn2ActionPerformed

    private void btxXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btxXoaActionPerformed
        player mod = getModel();
        try {
            int hoi = JOptionPane.showConfirmDialog(this, "Bạn có muốn xoá cầu thủ này?", "Đuổi việc", JOptionPane.YES_NO_OPTION);
            if (hoi == JOptionPane.YES_OPTION) {
                pServiceImp.delete(mod.getIdPlayer());
                JOptionPane.showMessageDialog(this, "Xoá nhân viên thành công");
                index = -1;
                Showdetails();
            }
            LoadData();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btxXoaActionPerformed

    private void txtQuoctichActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuoctichActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuoctichActionPerformed

    private void rdoHLVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoHLVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdoHLVActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            int hoi = JOptionPane.showConfirmDialog(this, "Bạn có muốn đăng xuất?", "Đăng xuất", JOptionPane.YES_NO_OPTION);
            if (hoi == JOptionPane.YES_OPTION) {
           this.dispose();
                Login logIn = new Login();
                logIn.setVisible(true);
            }
            LoadData();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
      Home home = new Home();
   this.dispose();
   home.setVisible(true);
    }//GEN-LAST:event_btn1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PlayerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PlayerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PlayerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PlayerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PlayerUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnnew;
    private javax.swing.JButton btxXoa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rdoCC;
    private javax.swing.JRadioButton rdoHLV;
    private javax.swing.JRadioButton rdoNam;
    private javax.swing.JRadioButton rdoNu;
    private javax.swing.JTable tblCauthu;
    private com.toedter.calendar.JDateChooser txtDate;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtHovaten;
    private javax.swing.JTextField txtID;
    private javax.swing.JPasswordField txtPass;
    private javax.swing.JTextField txtQuoctich;
    private javax.swing.JTextField txtSdt;
    private javax.swing.JTextField txtSoao;
    private javax.swing.JTextField txtTienluong;
    // End of variables declaration//GEN-END:variables
/**
     *
     */
    private void Showdetails() {
        index = tblCauthu.getSelectedRow();
        model = (DefaultTableModel) tblCauthu.getModel();
        txtID.setText(String.valueOf(tblCauthu.getValueAt(index, 0)));
        txtHovaten.setText(String.valueOf(tblCauthu.getValueAt(index, 1)));
        String date = String.valueOf(tblCauthu.getValueAt(index, 2));
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
        try {
            txtDate.setDate(sdf.parse(date));
        } catch (ParseException ex) {
            Logger.getLogger(player.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (tblCauthu.getValueAt(index, 3).equals("Nam")) {
            rdoNam.setSelected(true);
        } else {
            rdoNu.setSelected(true);
        }
        txtSoao.setText(String.valueOf(tblCauthu.getValueAt(index, 4)));

        txtQuoctich.setText(String.valueOf(tblCauthu.getValueAt(index, 5)));
        txtSdt.setText(String.valueOf(tblCauthu.getValueAt(index, 6)));
        txtEmail.setText(String.valueOf(tblCauthu.getValueAt(index, 7)));
        txtTienluong.setText(String.valueOf(tblCauthu.getValueAt(index, 8)));
        txtPass.setText(String.valueOf(tblCauthu.getValueAt(index, 9)));
        if (tblCauthu.getValueAt(index, 6).equals("Cầu thủ")) {
            rdoCC.setSelected(true);
        } else {
            rdoHLV.setSelected(true);
        }
        tblCauthu.setRowSelectionInterval(index, index);

    }

    private void LoadData() {
        model = (DefaultTableModel) tblCauthu.getModel();
        model.setRowCount(0);
        try {
            List<player> listNV = pServiceImp.selectALL();
            for (player x : listNV) {
                Object[] row = {
                    x.getIdPlayer(),
                    x.getPlayername(),
                    x.getYear(),
                    x.isSex() ? "Nam" : "Nữ",
                    x.getClothersnumber(),
                    x.getNationality(),
                    x.getPhone(),
                    x.getEmail(),
                    x.getSalaly(),
                    x.isRole() ? "Cần thủ" : "HLV"};
                model.addRow(row);
            }
        } catch (Exception e) {
        }
    }

}
